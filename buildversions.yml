# File: Common build steps for reuse

parameters:
  major: 1
  minor: 0
  buildNo: 0


steps:
# Windows script setting up $(packageversion) of the nuget package - based on branch
- script: |
    echo ##vso[task.setvariable variable=packageversion;isOutput=true]${{ parameters.major }}.${{ parameters.minor}}.${{ parameters.buildNo }}-prerelease
    name: 'SettingPrereleaseNugetPackageVersion'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
- script: | 
    echo ##vso[task.setvariable variable=packageversion;isOutput=true]${{ parameters.major }}.${{ parameters.minor}}.${{ parameters.buildNo }}
    name: 'SettingNugetPackageVersion'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')

# Windows script setting up $(fileversion) used to stamp AssemblyFileVersions. 
# By convention we use 'Major.Minor.BuildNo.0' on Master and 'Major.Minor.0.BuildNo' on other branches
- script: | 
    echo ##vso[task.setvariable variable=fileversion;isOutput=true]${{ parameters.major }}.${{ parameters.minor}}.${{ parameters.buildNo }}.0
    name: 'SettingFileVersionMaster'
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
- script: | 
    echo ##vso[task.setvariable variable=fileversion;isOutput=true]${{ parameters.major }}.${{ parameters.minor}}.0.${{ parameters.buildNo }}
    name: 'SettingFileVersionNonMaster'
    condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

steps:
- script: echo $(fileversion). Env = %FILEVERSION%
- task: VersionDotNetCoreAssemblies@2
    displayName: 'Set FileVersion on *.csproj (netcore) $(fileversion)'
    inputs: 
      # Required arguments
      Path: $(Build.SourcesDirectory)
      VersionNumber: $(fileversion)
      VersionRegex: \d+\.\d+\.\d+\.\d+
      FilenamePattern: .csproj
      Field: FileVersion
      OutputVersion: OutputedVersion

# Version 'classic' .NET Assemblies
# Description - Applies a version to a .NET assembly via the assemblyinfo.cs or .vb files based on the build number.
# For the Plugin project(s) which are ClickOnce
- task: VersionAssemblies@2
  displayName: 'Set AssemblyFileVersion in AssemblyInfo.cs - $(fileversion)'
  inputs: 
    Path: $(Set Build.SourcesDirectory)
    VersionNumber: $(fileversion)
    VersionRegex: \d+\.\d+\.\d+\.\d+
    FilenamePattern: AssemblyInfo.cs
    Field: AssemblyFileVersion
    OutputVersion: OutputedVersion
